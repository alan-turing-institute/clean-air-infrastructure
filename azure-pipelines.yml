trigger:
- master
- k8s_webserver

pr: none

stages:
# - stage: Docker
#   displayName: Add new Docker images to ACR
#   jobs:
#   - job: BuildAndPushDocker
#     displayName: Build and register Docker images
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - script: |
#         docker build -t $(ACR_SERVER)/aqe:$(Build.SourceVersion)FromPipeline -f containers/dockerfiles/add_aqe_readings.Dockerfile containers
#       displayName: 'Build AQE'
#     - script: |
#         docker build -t $(ACR_SERVER)/laqn:$(Build.SourceVersion)FromPipeline -f containers/dockerfiles/add_laqn_readings.Dockerfile containers
#       displayName: 'Build LAQN'
#     - script: |
#         docker build -t $(ACR_SERVER)/scoot:$(Build.SourceVersion)FromPipeline -f containers/dockerfiles/add_scoot_readings.Dockerfile containers
#       displayName: 'Build SCOOT'
#     - script: |
#         docker images
#       displayName: 'List images'
#     - script: |
#         echo "$(ACR_PASSWORD)" | docker login -u "$(ACR_USERNAME)" --password-stdin "$(ACR_SERVER)"
#       displayName: 'Login to ACR'
#     - script: |
#         docker push $(ACR_SERVER)/aqe:$(Build.SourceVersion)FromPipeline
#         docker push $(ACR_SERVER)/laqn:$(Build.SourceVersion)FromPipeline
#         docker push $(ACR_SERVER)/scoot:$(Build.SourceVersion)FromPipeline
#       displayName: 'Push Docker images to ACR'


- stage: Kubernetes
  displayName: Update Helm chart on Azure Kubernetes cluster
  jobs:
  - job: UpdateAzureKubernetesHelmChart
    displayName: Install kubectl and install/upgrade helm
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    # Install helm 3
    - script: |
        # cat kubernetes/cleanair/values.yaml
        echo $(Build.ArtifactStagingDirectory)
        ls $(Build.ArtifactStagingDirectory)/
        pwd
      displayName: 'List directory'
    # Install kubectl
    - task: KubectlInstaller@0
      displayName: Install kubectl'
      inputs:
        kubectlVersion: '1.14.8'
    # Get Azure credentials
    - task: AzureCLI@1
      displayName: 'Get Azure credentials'
      inputs:
        azureSubscription: 'cleanair-scn'
        scriptLocation: 'inlineScript'
        inlineScript: 'az aks get-credentials -n $(KUBERNETES_CLUSTER_NAME) -g $(KUBERNETES_RESOURCE_GROUP)'
    # Install helm 3
    - task: HelmInstaller@1
      displayName: 'Install helm 3'
      inputs:
        helmVersionToInstall: '3.0.3'
    # Package helm chart
    - task: HelmDeploy@0
      displayName: 'Package helm chart'
      inputs:
        command: package
        chartPath: kubernetes/cleanair
        destination: $(Build.ArtifactStagingDirectory)
    # Install/upgrade helm chart
    - task: HelmDeploy@0
      displayName: 'Install/upgrade helm chart'
      inputs:
        connectionType: Azure Resource Manager
        azureSubscriptionEndpoint: 'cleanair-scn'
        azureResourceGroup: $(KUBERNETES_RESOURCE_GROUP)
        kubernetesCluster: $(KUBERNETES_CLUSTER_NAME)
        command: upgrade
        chartType: filepath
        chartPath: $(Build.ArtifactStagingDirectory)/cleanair-v0.1.0.tgz
        releaseName: cleanair
        install: true
