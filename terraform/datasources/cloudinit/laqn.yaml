#cloud-config

# Update package database on first boot (ie run apt-get update)
package_update: true

# Upgrade the instance on first boot (ie run apt-get upgrade)
package_upgrade: true

# Add the atiadmin (default) and laqndaemon users
users:
  - default
  - name: laqndaemon
    lock_passwd: True
    sudo: False

# List of packages to install with apt-get
packages:
  - apache2
  - build-essential
  - libapache2-mod-wsgi-py3
  - libffi-dev
  - libssl-dev
  - python3-flask
  - python3-pip

write_files:
  # Write the Apache config file
  - path: /000-default.conf
    content: |
      <VirtualHost *:80>
          ServerName cleanair-laqn.uksouth.cloudapp.azure.com
          ErrorLog ${APACHE_LOG_DIR}/error.log
          CustomLog ${APACHE_LOG_DIR}/access.log combined
          WSGIDaemonProcess webhook user=www-data group=www-data threads=5
          WSGIProcessGroup webhook
          WSGIScriptAlias / /var/www/flask/webhook/webhook.wsgi
          Alias /static/ /var/www/flask/webhook/static
          <Directory /var/www/flask/webhook/static>
              Order allow,deny
              Allow from all
          </Directory>
      </VirtualHost>

  # Flask app acting as the POST endpoint for the GitHub webhook
  - path: /var/www/flask/webhook/__init__.py
    content: |
      from flask import Flask, jsonify, request
      import json
      import hashlib
      import hmac
      app = Flask(__name__)
      def verify_signature(data, signature):
        with open("/var/www/github.secret", "r") as f_secret:
            github_secret = f_secret.readlines()[0].strip()
        mac = hmac.new(github_secret.encode(), msg=data, digestmod=hashlib.sha1)
        return hmac.compare_digest('sha1=' + mac.hexdigest(), signature)
      @app.route("/")
      def default():
          return "Flask server for github webhooks"
      @app.route("/github", methods=['POST'])
      def github_webhook():
        print("Processing webhook request...")
        request.get_data()
        signature = request.headers.get('X-Hub-Signature')
        data = request.data
        if verify_signature(data, signature):
          print("Verified GitHub signature: {}".format(signature))
          with open("/var/www/update_needed", "w") as f_output:
            f_output.write("yes")
          return jsonify({'msg': 'Ok'})
        print("Failed to verify GitHub signature: {}".format(signature))
        return jsonify({'msg': 'invalid hash'})
      if __name__ == "__main__":
          app.run()

  # Configuration for Flask app
  - path: /var/www/flask/webhook/webhook.wsgi
    content: |
      #! /usr/bin/env python3
      import sys
      sys.path.insert(0,"/var/www/flask/")
      from webhook import app as application

  # Automatically clone or update the GitHub repository
  - path: /home/laqndaemon/pull_from_github.sh
    content: |
      #! /bin/bash
      if [ "$(cat /var/www/update_needed)" == "yes" ]; then
        cd /home/laqndaemon
        if [ ! -e clean-air-infrastructure ]; then
          git clone git@github.com:alan-turing-institute/clean-air-infrastructure.git
        fi
        cd clean-air-infrastructure
        git fetch
        git checkout master
        git pull
        echo "" > /var/www/update_needed
      fi

  # Add GitHub server as a known host
  - path: /home/laqndaemon/.ssh/known_hosts
    content: |
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==


# Run any additional commands
runcmd:
  # Create SSH key and fix file permissions
  - echo "*** Updating laqndaemon home directory... ***"
  - mkdir -p /home/laqndaemon/.ssh
  - ssh-keygen -t rsa -b 4096 -C "laqn@cleanair" -N "" -f /home/laqndaemon/.ssh/id_rsa
  - chown -R laqndaemon:laqndaemon /home/laqndaemon

  # Setup apache with default user (www-data)
  - echo "*** Setting up apache server pointing to local disk... ***"
  - mv /000-default.conf /etc/apache2/sites-enabled/000-default.conf

  # Create callback file to trigger updates
  - echo "*** Setting up automatic GitHub updates... ***"
  - chmod u+x /home/laqndaemon/pull_from_github.sh
  - echo "* * * * * laqndaemon /home/laqndaemon/pull_from_github.sh" >> /etc/crontab

  # Setup minimal Flask server
  - echo "*** Configuring Flask server... ***"
  - echo "127.0.0.1 cleanair-laqn.uksouth.cloudapp.azure.com" >> /etc/hosts
  - echo "ServerName cleanair-laqn.uksouth.cloudapp.azure.com" >> /etc/apache2/apache2.conf
  - echo "*** Adding GitHub secret... ***"
  - while [ ! -f /tmp/github.secret ]; do sleep 5; done
  - mv /tmp/github.secret /var/www/github.secret
  - echo "yes" > /var/www/update_needed
  - chmod o+w /var/www/update_needed
  - chown -R www-data:www-data /var/www/
  - systemctl restart apache2

  # Clean up installation
  - echo "*** Cleaning up packages... ***"
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get clean

final_message:
  "Cloud-init configuration finished after $UPTIME seconds"
