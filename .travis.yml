language: python
python:
  - "3.7"

jobs:
  include:
    - stage: "Dependencies"
      name: "Install dependencies"
      install:
        - pip install -r containers/requirements.txt
        - pip install 'containers/cleanair[models,traffic,dashboard]'
        - pip install 'containers/uatraffic'
      script:
        - python --version
      cache:
        directories:
          - $HOME/.cache/pip

    - stage: test
      script: HOME/.cache/pip list
    # - stage: "Linting and tests"
    #   name: "Run linting"
    #   script:
        
    #     # Flake8 performs pyflakes, pycodestyle and McCabe complexity checks
    #     - flake8 --ignore=E203, W503
    #     # Check black formatting would not make any chages
    #     - black --check */
    #     # Run pylint for stricter error checking. Run for each package seperately and then run for everything else
    #     # NB. We need to disable the hanging indentation check because of https://github.com/psf/black/issues/48
    #     - pylint --disable=C0330 */ --ignore=cleanair,urbanair,uatraffic
    #     - pylint --disable=C0330 containers/cleanair/*
    #     # - pylint --disable=C0330 containers/urbanair/*
    #     - pylint --disable=C0330 containers/uatraffic/*

    # - name: "Run tests"
    #   addons:
    #     postgresql: '11'
    #     apt:
    #       packages:
    #         - postgresql-11-postgis-3
    #         - postgresql-11-postgis-3-scripts
    #   before_install:
    #     - sudo apt-get update
    #     - sudo apt-get -y install gdal-bin
    #     - sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
    #     - sudo systemctl restart postgresql@11-main
    #     # - psql -c 'CREATE EXTENSION postgis' -U postgres -p 5433
    #     # - psql -c 'create database cleanair_test_db' -U postgres -p 5433
    #     - | 
    #         mkdir -p .secrets
    #         echo '{
    #             "username": "postgres",
    #             "password": "''",
    #             "host": "localhost",
    #             "port": 5433,
    #             "db_name": "cleanair_test_db",
    #             "ssl_mode": "prefer"
    #         }' >> .secrets/db_secrets_offline.json
    #   before_script:
    #     - python containers/entrypoints/insert_static_datasets.py -t $SAS_TOKEN -s .secrets/db_secrets_offline.json -d street_canyon rectgrid_100 hexgrid london_boundary oshighway_roadlink scoot_detector urban_village
    #   script:
    #     # # Run all pytest unit tests
    #     - python -m pytest containers --travis
