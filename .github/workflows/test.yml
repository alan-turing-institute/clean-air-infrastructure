name: Tests

on: [push]

env:
  DB_SECRET_FILE: .secrets/db_secrets_offline.json

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
  test:
    runs-on: ubuntu-latest
    container:
      image: cleanairdocker.azurecr.io/cleanair_base:latest
      credentials:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: cleanair_test_db
          POSTGRES_USER: cleanair_test_user
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_PASSWORD: cleanair_test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Dependencies
      run: |
        pip install --upgrade pip
        pip install -r containers/requirements.txt
    - name: Install
      run: pip install containers/cleanair
    - name: Secretfile
      run: |
        mkdir -p .secrets
        echo '{"username": "cleanair_test_user", "password": "cleanair_test_password", "host": "cleanair_test_user", "port": $POSTGRES_PORT, "db_name": "cleanair_test_db", "ssl_mode": "prefer"}' >> $DB_SECRET_FILE
        cat $DB_SECRET_FILE
    - name: Test DB connection
      run: pytest containers/tests/test_database_init --secretfile $DB_SECRET_FILE
    - name: Test cleanair
      run: pytest containers/tests/test_cleanair/test_utils/test_dimension_calculator.py --secretfile $DB_SECRET_FILE
    - name: Type hinting
      run: mypy --config-file .mypy.ini containers/cleanair